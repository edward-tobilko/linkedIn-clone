{"version":3,"file":"static/js/558.dc1bb824.chunk.js","mappings":"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","sources":["components/sidebar/sidebarStyle.tsx","components/forms/status-input/Status.tsx","pages/profile/CardProfile.tsx","components/sidebar/Sidebar.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { themeVars } from \"../../utils/vars/themeVars\";\r\n\r\n// Sidebar component\r\nexport const SidebarStyle = styled.aside`\r\n  max-width: 280px;\r\n  width: 100%;\r\n\r\n  .sidebar {\r\n    position: relative;\r\n\r\n    &-followers {\r\n      background-color: ${themeVars.colors.headerBackgroundColor};\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 60px 0;\r\n\r\n      &:before {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${themeVars.colors.lightGreyColor};\r\n        opacity: 0.5;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n      }\r\n\r\n      &:after {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${themeVars.colors.lightGreyColor};\r\n        opacity: 0.5;\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 30%;\r\n      }\r\n\r\n      p {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 7px 0;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        transition: all 0.2s ease-in-out;\r\n\r\n        a {\r\n          color: ${themeVars.colors.whiteColor};\r\n          text-decoration: none;\r\n        }\r\n\r\n        span {\r\n          padding-left: 7px;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.7;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-elements {\r\n      background-color: ${themeVars.colors.headerBackgroundColor};\r\n\r\n      &__time {\r\n        position: relative;\r\n        padding-bottom: 25px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n\r\n        &:after {\r\n          content: \"\";\r\n          width: 100%;\r\n          height: 1px;\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.5;\r\n          position: absolute;\r\n          left: 0;\r\n          bottom: 0;\r\n        }\r\n\r\n        .button {\r\n          --width: 100px;\r\n          --height: 35px;\r\n          --tooltip-height: 35px;\r\n          --tooltip-width: 120px;\r\n          --gap-between-tooltip-to-button: 12px;\r\n          --button-color: #1b415f;\r\n          --tooltip-color: #ffffff;\r\n          width: var(--width);\r\n          height: var(--height);\r\n          background: var(--button-color);\r\n          position: relative;\r\n          text-align: center;\r\n          border-radius: 0.45em;\r\n          transition: background 0.3s;\r\n        }\r\n\r\n        .button::before {\r\n          position: absolute;\r\n          content: attr(data-tooltip);\r\n          width: var(--tooltip-width);\r\n          height: var(--tooltip-height);\r\n          background-color: #555;\r\n          font-size: 13px;\r\n          color: #ffffff;\r\n          border-radius: 0.25em;\r\n          line-height: var(--tooltip-height);\r\n          bottom: calc(\r\n            var(--height) + var(--gap-between-tooltip-to-button) + 10px\r\n          );\r\n          left: calc(50% - var(--tooltip-width) / 2);\r\n        }\r\n\r\n        .button::after {\r\n          position: absolute;\r\n          content: \"\";\r\n          width: 0;\r\n          height: 0;\r\n          border: 10px solid transparent;\r\n          border-top-color: #555;\r\n          left: calc(50% - 10px);\r\n          bottom: calc(100% + var(--gap-between-tooltip-to-button) - 10px);\r\n        }\r\n\r\n        .button::after,\r\n        .button::before {\r\n          opacity: 0;\r\n          visibility: hidden;\r\n          transition: all 0.5s;\r\n        }\r\n\r\n        .text {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .button-wrapper,\r\n        .text,\r\n        .icon {\r\n          overflow: hidden;\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          left: 0;\r\n          color: #ffffff;\r\n        }\r\n\r\n        .text {\r\n          top: 0;\r\n        }\r\n\r\n        .text,\r\n        .icon {\r\n          transition: top 0.5s;\r\n        }\r\n\r\n        .icon {\r\n          color: #ffffff;\r\n          top: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .icon svg {\r\n          width: 24px;\r\n          height: 24px;\r\n        }\r\n\r\n        .button:hover {\r\n          background: #1d2226;\r\n        }\r\n\r\n        .button:hover .text {\r\n          top: -100%;\r\n        }\r\n\r\n        .button:hover .icon {\r\n          top: 0;\r\n        }\r\n\r\n        .button:hover:before,\r\n        .button:hover:after {\r\n          opacity: 1;\r\n          visibility: visible;\r\n        }\r\n\r\n        .button:hover:after {\r\n          bottom: calc(\r\n            var(--height) + var(--gap-between-tooltip-to-button) - 20px\r\n          );\r\n        }\r\n\r\n        .button:hover:before {\r\n          bottom: calc(var(--height) + var(--gap-between-tooltip-to-button));\r\n        }\r\n      }\r\n\r\n      &__action {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 50px;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in-out;\r\n\r\n        span {\r\n          font-size: 14px;\r\n          padding-left: 5px;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.7;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { FC } from \"react\";\r\n\r\nimport StatusContainer from \"./StatusContainer\";\r\n\r\nconst Status: FC = () => {\r\n  return <StatusContainer />;\r\n};\r\n\r\nexport default Status;\r\n","import { FC, SyntheticEvent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AvatarImgStyle } from \"../../rootStyles\";\r\nimport { CardProfileEditorStyle, CardProfileStyle } from \"./profileStyle\";\r\n\r\nimport Status from \"../../components/forms/status-input/Status\";\r\nimport { CardProfileLoader } from \"../../components/UI/loaders/profile-loaders/CardProfileLoader\";\r\n\r\nimport { CardProfilePropsType } from \"./profileTypes\";\r\n\r\nimport { useTypeDispatch } from \"../../hooks/useTypeSelector\";\r\n\r\nimport { setLoadingAC } from \"../../redux/reducers/profile-reducer/profileReducer\";\r\n\r\nexport const CardProfile: FC<CardProfilePropsType> = ({\r\n  currentProfilePage,\r\n  downloadSmallPhotoTC,\r\n  loading,\r\n}) => {\r\n  const dispatch = useTypeDispatch();\r\n\r\n  const downloadPhoto = (event: SyntheticEvent<HTMLInputElement>) => {\r\n    if (event.currentTarget.files && event.currentTarget.files.length) {\r\n      setLoadingAC(true);\r\n      dispatch(downloadSmallPhotoTC(event.currentTarget.files[0]));\r\n      setLoadingAC(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardProfileStyle>\r\n      <img\r\n        src={currentProfilePage?.photos?.large || \"https://place-hold.it/170\"}\r\n        alt=\"\"\r\n        className=\"cardProfile__wrapper\"\r\n      />\r\n\r\n      {currentProfilePage?.userId === 29793 && (\r\n        <CardProfileEditorStyle $sidebarTop={true} $sidebarRight={true}>\r\n          <input\r\n            type=\"file\"\r\n            name=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={downloadPhoto}\r\n            disabled={loading}\r\n          />\r\n\r\n          {loading ? <CardProfileLoader /> : <i className=\"bx bx-pencil\"></i>}\r\n        </CardProfileEditorStyle>\r\n      )}\r\n\r\n      <div className=\"cardProfile__desc\">\r\n        <AvatarImgStyle\r\n          src={currentProfilePage?.photos?.small || \"https://place-hold.it/90\"}\r\n          alt=\"\"\r\n          width=\"70px\"\r\n          height=\"70px\"\r\n          position={false}\r\n          bottom=\"0\"\r\n          left=\"0\"\r\n        />\r\n\r\n        <h1 className=\"cardProfile__desc-suptitle\">\r\n          <NavLink to=\"/user-profile\"> {currentProfilePage?.fullName} </NavLink>\r\n        </h1>\r\n\r\n        {currentProfilePage?.aboutMe?.length > 0 ? (\r\n          <p className=\"cardProfile__desc-title\">\r\n            {currentProfilePage?.aboutMe}\r\n          </p>\r\n        ) : (\r\n          <p className=\"cardProfile__desc-title\">No info</p>\r\n        )}\r\n\r\n        <Status />\r\n      </div>\r\n    </CardProfileStyle>\r\n  );\r\n};\r\n","import React, { useEffect, FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { CardProfilePropsType } from \"../../pages/profile/profileTypes\";\r\n\r\nimport { SidebarStyle } from \"./sidebarStyle\";\r\n\r\nimport { MdVisibility } from \"react-icons/md\";\r\n\r\nimport { CardProfile } from \"../../pages/profile/CardProfile\";\r\nimport { SocialContentLoader } from \"../UI/loaders/social-loaders/SocialContentLoader\";\r\nimport { followedUsersHelper } from \"../../utils/helper-functions/helperComponentFunctions\";\r\n\r\n// UI time elements\r\nfunction UITimeElements() {\r\n  const [seconds, setSeconds] = React.useState(new Date().toLocaleTimeString());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div data-tooltip={new Date().toDateString()} className=\"button\">\r\n        <div className=\"button-wrapper\">\r\n          <div className=\"text\">Date</div>\r\n          <span className=\"icon\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"16\"\r\n              width=\"16\"\r\n              className=\"bi bi-cart2\"\r\n            >\r\n              <path\r\n                d=\"M9 1V3H15V1H17V3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3H7V1H9ZM20 11H4V19H20V11ZM7 5H4V9H20V5H17V7H15V5H9V7H7V5Z\"\r\n                fill=\"currentColor\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div data-tooltip={seconds} className=\"button\">\r\n        <div className=\"button-wrapper\">\r\n          <div className=\"text\">Time</div>\r\n          <span className=\"icon\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"bi bi-cart2\"\r\n              height=\"16\"\r\n              width=\"16\"\r\n            >\r\n              <path\r\n                d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM13 12H17V14H11V7H13V12Z\"\r\n                fill=\"currentColor\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Sidebar: FC<CardProfilePropsType> = ({\r\n  currentProfilePage,\r\n  downloadSmallPhotoTC,\r\n  loading,\r\n  chatUsers,\r\n}) => {\r\n  if (!currentProfilePage) return <SocialContentLoader />;\r\n\r\n  return (\r\n    <SidebarStyle>\r\n      <div className=\"sidebar\">\r\n        <CardProfile\r\n          currentProfilePage={currentProfilePage}\r\n          downloadSmallPhotoTC={downloadSmallPhotoTC}\r\n          loading={loading}\r\n        />\r\n\r\n        <div className=\"sidebar-followers\">\r\n          <p>\r\n            <i className=\"bx bx-group\"></i>\r\n            <NavLink to={`/followed-users`}>\r\n              <span> {followedUsersHelper(chatUsers)?.length} followers</span>\r\n            </NavLink>\r\n          </p>\r\n          <p>\r\n            <MdVisibility /> <span>354 views of your profile</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"sidebar-elements\">\r\n          <div className=\"sidebar-elements__time\">{UITimeElements()}</div>\r\n\r\n          <div className=\"sidebar-elements__action\">\r\n            <i className=\"bx bxs-bookmark\"></i> <span>My elements</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </SidebarStyle>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["SidebarStyle","styled","_templateObject","_taggedTemplateLiteral","themeVars","_jsx","StatusContainer","CardProfile","_ref","_currentProfilePage$p","_currentProfilePage$p2","_currentProfilePage$a","currentProfilePage","downloadSmallPhotoTC","loading","dispatch","useTypeDispatch","_jsxs","CardProfileStyle","children","src","photos","large","alt","className","userId","CardProfileEditorStyle","$sidebarTop","$sidebarRight","type","name","accept","onChange","event","currentTarget","files","length","setLoadingAC","disabled","CardProfileLoader","AvatarImgStyle","small","width","height","position","bottom","left","NavLink","to","fullName","aboutMe","Status","UITimeElements","_React$useState","React","Date","toLocaleTimeString","_React$useState2","_slicedToArray","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","_Fragment","toDateString","xmlns","viewBox","d","fill","_followedUsersHelper","chatUsers","followedUsersHelper","MdVisibility","SocialContentLoader"],"sourceRoot":""}