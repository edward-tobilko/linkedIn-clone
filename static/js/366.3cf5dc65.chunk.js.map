{"version":3,"file":"static/js/366.3cf5dc65.chunk.js","mappings":"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","sources":["components/sidebar/sidebarStyle.tsx","components/forms/status-input/statusStyle.tsx","components/forms/status-input/Status.tsx","pages/profile/CardProfile.tsx","components/sidebar/Sidebar.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { themeVars } from \"../../utils/vars/themeVars\";\r\n\r\n// Sidebar component\r\nexport const SidebarStyle = styled.aside`\r\n  max-width: 280px;\r\n  width: 100%;\r\n\r\n  .sidebar {\r\n    position: relative;\r\n\r\n    &-followers {\r\n      background-color: ${themeVars.colors.headerBackgroundColor};\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      padding: 60px 0;\r\n\r\n      &:before {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${themeVars.colors.lightGreyColor};\r\n        opacity: 0.5;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 50%;\r\n      }\r\n\r\n      &:after {\r\n        content: \"\";\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: ${themeVars.colors.lightGreyColor};\r\n        opacity: 0.5;\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 30%;\r\n      }\r\n\r\n      p {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        padding: 7px 0;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        transition: all 0.2s ease-in-out;\r\n        span {\r\n          padding-left: 7px;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.7;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-elements {\r\n      background-color: ${themeVars.colors.headerBackgroundColor};\r\n\r\n      &__time {\r\n        position: relative;\r\n        padding-bottom: 20px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n\r\n        &:after {\r\n          content: \"\";\r\n          width: 100%;\r\n          height: 1px;\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.5;\r\n          position: absolute;\r\n          left: 0;\r\n          bottom: 0;\r\n        }\r\n\r\n        .button {\r\n          --width: 100px;\r\n          --height: 35px;\r\n          --tooltip-height: 35px;\r\n          --tooltip-width: 120px;\r\n          --gap-between-tooltip-to-button: 12px;\r\n          --button-color: #1b415f;\r\n          --tooltip-color: #ffffff;\r\n          width: var(--width);\r\n          height: var(--height);\r\n          background: var(--button-color);\r\n          position: relative;\r\n          text-align: center;\r\n          border-radius: 0.45em;\r\n          transition: background 0.3s;\r\n        }\r\n\r\n        .button::before {\r\n          position: absolute;\r\n          content: attr(data-tooltip);\r\n          width: var(--tooltip-width);\r\n          height: var(--tooltip-height);\r\n          background-color: #555;\r\n          font-size: 13px;\r\n          color: #ffffff;\r\n          border-radius: 0.25em;\r\n          line-height: var(--tooltip-height);\r\n          bottom: calc(\r\n            var(--height) + var(--gap-between-tooltip-to-button) + 10px\r\n          );\r\n          left: calc(50% - var(--tooltip-width) / 2);\r\n        }\r\n\r\n        .button::after {\r\n          position: absolute;\r\n          content: \"\";\r\n          width: 0;\r\n          height: 0;\r\n          border: 10px solid transparent;\r\n          border-top-color: #555;\r\n          left: calc(50% - 10px);\r\n          bottom: calc(100% + var(--gap-between-tooltip-to-button) - 10px);\r\n        }\r\n\r\n        .button::after,\r\n        .button::before {\r\n          opacity: 0;\r\n          visibility: hidden;\r\n          transition: all 0.5s;\r\n        }\r\n\r\n        .text {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .button-wrapper,\r\n        .text,\r\n        .icon {\r\n          overflow: hidden;\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 100%;\r\n          left: 0;\r\n          color: #ffffff;\r\n        }\r\n\r\n        .text {\r\n          top: 0;\r\n        }\r\n\r\n        .text,\r\n        .icon {\r\n          transition: top 0.5s;\r\n        }\r\n\r\n        .icon {\r\n          color: #ffffff;\r\n          top: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n        }\r\n\r\n        .icon svg {\r\n          width: 24px;\r\n          height: 24px;\r\n        }\r\n\r\n        .button:hover {\r\n          background: #1d2226;\r\n        }\r\n\r\n        .button:hover .text {\r\n          top: -100%;\r\n        }\r\n\r\n        .button:hover .icon {\r\n          top: 0;\r\n        }\r\n\r\n        .button:hover:before,\r\n        .button:hover:after {\r\n          opacity: 1;\r\n          visibility: visible;\r\n        }\r\n\r\n        .button:hover:after {\r\n          bottom: calc(\r\n            var(--height) + var(--gap-between-tooltip-to-button) - 20px\r\n          );\r\n        }\r\n\r\n        .button:hover:before {\r\n          bottom: calc(var(--height) + var(--gap-between-tooltip-to-button));\r\n        }\r\n      }\r\n\r\n      &__action {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: 50px;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in-out;\r\n\r\n        span {\r\n          font-size: 14px;\r\n          padding-left: 5px;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: ${themeVars.colors.lightGreyColor};\r\n          opacity: 0.7;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { themeVars } from \"../../../utils/vars/themeVars\";\r\n\r\nexport const StatusStyle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .status__name {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    color: ${themeVars.colors.lightGreyColor};\r\n    cursor: pointer;\r\n    padding-bottom: 10px;\r\n\r\n    &:hover + .tooltip__active {\r\n      display: block;\r\n      width: 200px;\r\n      padding: 10px;\r\n      border-radius: 0 20px 0 20px;\r\n      font-weight: 600;\r\n      font-size: 13px;\r\n      background: ${themeVars.colors.whiteColor};\r\n      color: ${themeVars.colors.blackColor};\r\n    }\r\n  }\r\n\r\n  .status__tooltip {\r\n    display: none;\r\n  }\r\n\r\n  .status__empty {\r\n    color: ${themeVars.colors.errorColor};\r\n    font-size: 13px;\r\n  }\r\n\r\n  input {\r\n    background: inherit;\r\n    border: 1px solid ${themeVars.colors.lightGreyColor};\r\n    min-width: 200px;\r\n    color: ${themeVars.colors.whiteColor};\r\n    height: 26px;\r\n    border-radius: 6px;\r\n    font-size: 13px;\r\n    font-weight: 300;\r\n    letter-spacing: 1px;\r\n    padding-left: 15px;\r\n  }\r\n`;\r\n","import React, { FC, useEffect } from \"react\";\r\n\r\nimport { StatusStyle } from \"./statusStyle\";\r\n\r\nimport { useTypeDispatch } from \"../../../hooks/useTypeSelector\";\r\n\r\nimport { StatusProps } from \"./statusTypes\";\r\n\r\nconst Status: FC<StatusProps> = ({\r\n  status,\r\n  updateUserStatusTC,\r\n  currentProfilePage,\r\n}) => {\r\n  const [statusValue, setStatusValue] = React.useState(status);\r\n  const [editMode, setEditMode] = React.useState(false);\r\n\r\n  const dispatch = useTypeDispatch();\r\n\r\n  const updateInputStatus = () => {\r\n    setEditMode(false);\r\n    dispatch(updateUserStatusTC(statusValue));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatusValue(status); //? потрібен для відображення статусу при багато-разовому перезавантаження сторінки (тобто, при перезавантаження сторіки перший хук useEffect спрацює в комп. ProfileContent, а після тут)\r\n  }, [status]);\r\n\r\n  return (\r\n    <>\r\n      <StatusStyle>\r\n        {!editMode ? (\r\n          <>\r\n            {currentProfilePage.userId === 29793 ? (\r\n              <>\r\n                <div\r\n                  className=\"status__name\"\r\n                  onDoubleClick={() => setEditMode(true)}\r\n                >\r\n                  {!status ? (\r\n                    <p className=\"status__empty\">No status</p>\r\n                  ) : (\r\n                    status\r\n                  )}\r\n                </div>\r\n                <div className=\"status__tooltip tooltip__active\">\r\n                  If you want to change your status, double-click here!\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!status ? <p className=\"status__empty\">No status</p> : status}\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add new status...\"\r\n            value={statusValue}\r\n            onChange={(e) => setStatusValue(e.currentTarget.value)}\r\n            onBlur={updateInputStatus}\r\n            autoFocus={true}\r\n            onFocus={(e) => e.target.select()} // автозаповнення внутрішнього вмісту інпута (синій колір)\r\n          />\r\n        )}\r\n      </StatusStyle>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import { FC } from \"react\";\r\n\r\nimport { AvatarImgStyle } from \"../../rootStyles\";\r\nimport { CardProfileStyle } from \"./profileStyle\";\r\n\r\nimport avatarIcon from \"../../img/images/avatar.png\";\r\nimport lampIcon from \"../../img/images/lamp.png\";\r\n\r\nimport Status from \"../../components/forms/status-input/Status\";\r\n\r\nimport { CardProfileProps } from \"./profileTypes\";\r\n\r\nexport const CardProfile: FC<CardProfileProps> = ({\r\n  currentProfilePage,\r\n  status,\r\n  updateUserStatusTC,\r\n}) => {\r\n  return (\r\n    <CardProfileStyle>\r\n      <img\r\n        src={\r\n          currentProfilePage?.photos?.large !== null\r\n            ? currentProfilePage?.photos?.large\r\n            : lampIcon\r\n        }\r\n        alt=\"\"\r\n        className=\"cardProfile__wrapper\"\r\n      />\r\n      <div className=\"cardProfile__desc\">\r\n        <AvatarImgStyle\r\n          src={\r\n            currentProfilePage?.photos?.small !== null\r\n              ? currentProfilePage?.photos?.small\r\n              : avatarIcon\r\n          }\r\n          alt=\"\"\r\n          width=\"70px\"\r\n          height=\"70px\"\r\n        />\r\n        <h1 className=\"cardProfile__desc-suptitle\">\r\n          {currentProfilePage?.fullName}\r\n        </h1>\r\n\r\n        {currentProfilePage?.aboutMe?.length > 0 ? (\r\n          <p className=\"cardProfile__desc-title\">\r\n            {currentProfilePage?.aboutMe}\r\n          </p>\r\n        ) : (\r\n          <p className=\"cardProfile__desc-title\">No info</p>\r\n        )}\r\n\r\n        <Status\r\n          status={status}\r\n          updateUserStatusTC={updateUserStatusTC}\r\n          currentProfilePage={currentProfilePage}\r\n        />\r\n      </div>\r\n    </CardProfileStyle>\r\n  );\r\n};\r\n","import React, { useEffect, FC } from \"react\";\r\n\r\nimport { SidebarStyle } from \"./sidebarStyle\";\r\n\r\nimport { MdVisibility } from \"react-icons/md\";\r\n\r\nimport { CardProfile } from \"../../pages/profile/CardProfile\";\r\nimport { SocialContentLoader } from \"../UI/loaders/social-content-loader/SocialContentLoader\";\r\n\r\nimport { SidebarProps } from \"./sidebarTypes\";\r\n\r\n// UI time elements\r\nfunction UITimeElements() {\r\n  const [seconds, setSeconds] = React.useState(new Date().toLocaleTimeString());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds(new Date().toLocaleTimeString());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div data-tooltip={new Date().toDateString()} className=\"button\">\r\n        <div className=\"button-wrapper\">\r\n          <div className=\"text\">Date</div>\r\n          <span className=\"icon\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              height=\"16\"\r\n              width=\"16\"\r\n              className=\"bi bi-cart2\"\r\n            >\r\n              <path\r\n                d=\"M9 1V3H15V1H17V3H21C21.5523 3 22 3.44772 22 4V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V4C2 3.44772 2.44772 3 3 3H7V1H9ZM20 11H4V19H20V11ZM7 5H4V9H20V5H17V7H15V5H9V7H7V5Z\"\r\n                fill=\"currentColor\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div data-tooltip={seconds} className=\"button\">\r\n        <div className=\"button-wrapper\">\r\n          <div className=\"text\">Time</div>\r\n          <span className=\"icon\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              className=\"bi bi-cart2\"\r\n              height=\"16\"\r\n              width=\"16\"\r\n            >\r\n              <path\r\n                d=\"M12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22ZM12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM13 12H17V14H11V7H13V12Z\"\r\n                fill=\"currentColor\"\r\n              ></path>\r\n            </svg>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Sidebar: FC<SidebarProps> = ({\r\n  currentProfilePage,\r\n  status,\r\n  updateUserStatusTC,\r\n}) => {\r\n  if (!currentProfilePage) return <SocialContentLoader />;\r\n\r\n  return (\r\n    <SidebarStyle>\r\n      <div className=\"sidebar\">\r\n        <CardProfile\r\n          currentProfilePage={currentProfilePage}\r\n          status={status}\r\n          updateUserStatusTC={updateUserStatusTC}\r\n        />\r\n\r\n        <div className=\"sidebar-followers\">\r\n          <p>\r\n            <i className=\"bx bx-group\"></i> <span>1,299 followers</span>\r\n          </p>\r\n          <p>\r\n            <MdVisibility /> <span>354 views of your profile</span>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"sidebar-elements\">\r\n          <div className=\"sidebar-elements__time\">{UITimeElements()}</div>\r\n\r\n          <div className=\"sidebar-elements__action\">\r\n            <i className=\"bx bxs-bookmark\"></i> <span>My elements</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </SidebarStyle>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["SidebarStyle","styled","_templateObject","_taggedTemplateLiteral","themeVars","StatusStyle","_ref","status","updateUserStatusTC","currentProfilePage","_React$useState","React","_React$useState2","_slicedToArray","statusValue","setStatusValue","_React$useState3","_React$useState4","editMode","setEditMode","dispatch","useTypeDispatch","useEffect","_jsx","_Fragment","children","type","placeholder","value","onChange","e","currentTarget","onBlur","autoFocus","onFocus","target","select","userId","_jsxs","className","onDoubleClick","CardProfile","_currentProfilePage$p","_currentProfilePage$p2","_currentProfilePage$p3","_currentProfilePage$p4","_currentProfilePage$a","CardProfileStyle","src","photos","large","lampIcon","alt","AvatarImgStyle","small","avatarIcon","width","height","fullName","aboutMe","length","Status","UITimeElements","Date","toLocaleTimeString","seconds","setSeconds","interval","setInterval","clearInterval","toDateString","xmlns","viewBox","d","fill","MdVisibility","SocialContentLoader"],"sourceRoot":""}